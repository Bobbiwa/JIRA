{"version":3,"file":"index.js","names":["betterAjvErrors","errors","data","schema","basePath","Array","isArray","length","definedErrors","filterSingleErrorPerProperty","map","error","path","pointerToDotNotation","instancePath","prop","getLastSegment","defaultContext","errorType","keyword","defaultMessage","cleanAjvMessage","message","validationError","additionalProp","params","additionalProperty","suggestionPointer","schemaPath","replace","properties","safeJsonPointer","object","pnter","fallback","suggestion","getSuggestion","value","suggestions","Object","keys","format","context","allowedValues","toString","type","missingProperty","allowedValue","errorEntries","entries","key","undefined"],"sources":["../../../../../../node_modules/@apideck/better-ajv-errors/src/index.ts"],"sourcesContent":["import { DefinedError, ErrorObject } from 'ajv';\nimport type { JSONSchema6 } from 'json-schema';\nimport { ValidationError } from './types/ValidationError';\nimport { filterSingleErrorPerProperty } from './lib/filter';\nimport { getSuggestion } from './lib/suggestions';\nimport { cleanAjvMessage, getLastSegment, pointerToDotNotation, safeJsonPointer } from './lib/utils';\n\nexport interface BetterAjvErrorsOptions {\n  errors: ErrorObject[] | null | undefined;\n  data: any;\n  schema: JSONSchema6;\n  basePath?: string;\n}\n\nexport const betterAjvErrors = ({\n  errors,\n  data,\n  schema,\n  basePath = '{base}',\n}: BetterAjvErrorsOptions): ValidationError[] => {\n  if (!Array.isArray(errors) || errors.length === 0) {\n    return [];\n  }\n\n  const definedErrors = filterSingleErrorPerProperty(errors as DefinedError[]);\n\n  return definedErrors.map((error) => {\n    const path = pointerToDotNotation(basePath + error.instancePath);\n    const prop = getLastSegment(error.instancePath);\n    const defaultContext = {\n      errorType: error.keyword,\n    };\n    const defaultMessage = `${prop ? `property '${prop}'` : path} ${cleanAjvMessage(error.message as string)}`;\n\n    let validationError: ValidationError;\n\n    switch (error.keyword) {\n      case 'additionalProperties': {\n        const additionalProp = error.params.additionalProperty;\n        const suggestionPointer = error.schemaPath.replace('#', '').replace('/additionalProperties', '');\n        const { properties } = safeJsonPointer({\n          object: schema,\n          pnter: suggestionPointer,\n          fallback: { properties: {} },\n        });\n        validationError = {\n          message: `'${additionalProp}' property is not expected to be here`,\n          suggestion: getSuggestion({\n            value: additionalProp,\n            suggestions: Object.keys(properties ?? {}),\n            format: (suggestion) => `Did you mean property '${suggestion}'?`,\n          }),\n          path,\n          context: defaultContext,\n        };\n        break;\n      }\n      case 'enum': {\n        const suggestions = error.params.allowedValues.map((value) => value.toString());\n        const prop = getLastSegment(error.instancePath);\n        const value = safeJsonPointer({ object: data, pnter: error.instancePath, fallback: '' });\n        validationError = {\n          message: `'${prop}' property must be equal to one of the allowed values`,\n          suggestion: getSuggestion({\n            value,\n            suggestions,\n          }),\n          path,\n          context: {\n            ...defaultContext,\n            allowedValues: error.params.allowedValues,\n          },\n        };\n        break;\n      }\n      case 'type': {\n        const prop = getLastSegment(error.instancePath);\n        const type = error.params.type;\n        validationError = {\n          message: `'${prop}' property type must be ${type}`,\n          path,\n          context: defaultContext,\n        };\n        break;\n      }\n      case 'required': {\n        validationError = {\n          message: `${path} must have required property '${error.params.missingProperty}'`,\n          path,\n          context: defaultContext,\n        };\n        break;\n      }\n      case 'const': {\n        return {\n          message: `'${prop}' property must be equal to the allowed value`,\n          path,\n          context: {\n            ...defaultContext,\n            allowedValue: error.params.allowedValue,\n          },\n        };\n      }\n\n      default:\n        return { message: defaultMessage, path, context: defaultContext };\n    }\n\n    // Remove empty properties\n    const errorEntries = Object.entries(validationError);\n    for (const [key, value] of errorEntries as [keyof ValidationError, unknown][]) {\n      if (value === null || value === undefined || value === '') {\n        delete validationError[key];\n      }\n    }\n\n    return validationError;\n  });\n};\n\nexport { ValidationError };\n"],"mappings":"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"}