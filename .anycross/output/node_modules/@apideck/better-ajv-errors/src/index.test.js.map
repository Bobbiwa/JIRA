{"version":3,"file":"index.test.js","names":["describe","ajv","schema","data","beforeEach","Ajv","allErrors","type","required","properties","str","enum","bounds","minimum","maximum","nested","deepReq","deep","additionalProperties","it","foo","validate","errors","betterAjvErrors","expect","toEqual","context","errorType","message","path","bonds","suggestion","empty","req1","req2","allowedValues","custom","aaa","items","id","title","child","$id","$ref","addSchema","isLive","const","allowedValue"],"sources":["../../../../../../node_modules/@apideck/better-ajv-errors/src/index.test.ts"],"sourcesContent":["import Ajv from 'ajv';\nimport { JSONSchema6 } from 'json-schema';\nimport { betterAjvErrors } from './index';\n\ndescribe('betterAjvErrors', () => {\n  let ajv: Ajv;\n  let schema: JSONSchema6;\n  let data: Record<string, unknown>;\n\n  beforeEach(() => {\n    ajv = new Ajv({ allErrors: true });\n    schema = {\n      type: 'object',\n      required: ['str'],\n      properties: {\n        str: {\n          type: 'string',\n        },\n        enum: {\n          type: 'string',\n          enum: ['one', 'two'],\n        },\n        bounds: {\n          type: 'number',\n          minimum: 2,\n          maximum: 4,\n        },\n        nested: {\n          type: 'object',\n          required: ['deepReq'],\n          properties: {\n            deepReq: {\n              type: 'boolean',\n            },\n            deep: {\n              type: 'string',\n            },\n          },\n          additionalProperties: false,\n        },\n      },\n      additionalProperties: false,\n    };\n  });\n\n  describe('additionalProperties', () => {\n    it('should handle additionalProperties=false', () => {\n      data = {\n        str: 'str',\n        foo: 'bar',\n      };\n      ajv.validate(schema, data);\n      const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n      expect(errors).toEqual([\n        {\n          context: {\n            errorType: 'additionalProperties',\n          },\n          message: \"'foo' property is not expected to be here\",\n          path: '{base}',\n        },\n      ]);\n    });\n\n    it('should handle additionalProperties=true', () => {\n      data = {\n        str: 'str',\n        foo: 'bar',\n      };\n      schema.additionalProperties = true;\n      ajv.validate(schema, data);\n      const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n      expect(errors).toEqual([]);\n    });\n\n    it('should give suggestions when relevant', () => {\n      data = {\n        str: 'str',\n        bonds: 'bar',\n      };\n      ajv.validate(schema, data);\n      const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n      expect(errors).toEqual([\n        {\n          context: {\n            errorType: 'additionalProperties',\n          },\n          message: \"'bonds' property is not expected to be here\",\n          path: '{base}',\n          suggestion: \"Did you mean property 'bounds'?\",\n        },\n      ]);\n    });\n\n    it('should handle object schemas without properties', () => {\n      data = {\n        empty: { foo: 1 },\n      };\n      schema = {\n        type: 'object',\n        properties: {\n          empty: {\n            type: 'object',\n            additionalProperties: false,\n          },\n        },\n      };\n      ajv.validate(schema, data);\n      const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n      expect(errors).toEqual([\n        {\n          context: {\n            errorType: 'additionalProperties',\n          },\n          message: \"'foo' property is not expected to be here\",\n          path: '{base}.empty',\n        },\n      ]);\n    });\n  });\n\n  describe('required', () => {\n    it('should handle required properties', () => {\n      data = {\n        nested: {},\n      };\n      ajv.validate(schema, data);\n      const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n      expect(errors).toEqual([\n        {\n          context: {\n            errorType: 'required',\n          },\n          message: \"{base} must have required property 'str'\",\n          path: '{base}',\n        },\n        {\n          context: {\n            errorType: 'required',\n          },\n          message: \"{base}.nested must have required property 'deepReq'\",\n          path: '{base}.nested',\n        },\n      ]);\n    });\n\n    it('should handle multiple required properties', () => {\n      schema = {\n        type: 'object',\n        required: ['req1', 'req2'],\n        properties: {\n          req1: {\n            type: 'string',\n          },\n          req2: {\n            type: 'string',\n          },\n        },\n      };\n      data = {};\n      ajv.validate(schema, data);\n      const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n      expect(errors).toEqual([\n        {\n          context: {\n            errorType: 'required',\n          },\n          message: \"{base} must have required property 'req1'\",\n          path: '{base}',\n        },\n        {\n          context: {\n            errorType: 'required',\n          },\n          message: \"{base} must have required property 'req2'\",\n          path: '{base}',\n        },\n      ]);\n    });\n  });\n\n  describe('type', () => {\n    it('should handle type errors', () => {\n      data = {\n        str: 123,\n      };\n      ajv.validate(schema, data);\n      const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n      expect(errors).toEqual([\n        {\n          context: {\n            errorType: 'type',\n          },\n          message: \"'str' property type must be string\",\n          path: '{base}.str',\n        },\n      ]);\n    });\n  });\n\n  describe('minimum/maximum', () => {\n    it('should handle minimum/maximum errors', () => {\n      data = {\n        str: 'str',\n        bounds: 123,\n      };\n      ajv.validate(schema, data);\n      const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n      expect(errors).toEqual([\n        {\n          context: {\n            errorType: 'maximum',\n          },\n          message: \"property 'bounds' must be <= 4\",\n          path: '{base}.bounds',\n        },\n      ]);\n    });\n  });\n\n  describe('enum', () => {\n    it('should handle enum errors', () => {\n      data = {\n        str: 'str',\n        enum: 'zzzz',\n      };\n      ajv.validate(schema, data);\n      const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n      expect(errors).toEqual([\n        {\n          context: {\n            errorType: 'enum',\n            allowedValues: ['one', 'two'],\n          },\n          message: \"'enum' property must be equal to one of the allowed values\",\n          path: '{base}.enum',\n        },\n      ]);\n    });\n\n    it('should provide suggestions when relevant', () => {\n      data = {\n        str: 'str',\n        enum: 'pne',\n      };\n      ajv.validate(schema, data);\n      const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n      expect(errors).toEqual([\n        {\n          context: {\n            errorType: 'enum',\n            allowedValues: ['one', 'two'],\n          },\n          message: \"'enum' property must be equal to one of the allowed values\",\n          path: '{base}.enum',\n          suggestion: \"Did you mean 'one'?\",\n        },\n      ]);\n    });\n\n    it('should not crash on null value', () => {\n      data = {\n        type: null,\n      };\n      schema = {\n        type: 'object',\n        properties: {\n          type: {\n            type: 'string',\n            enum: ['primary', 'secondary'],\n          },\n        },\n      };\n      ajv.validate(schema, data);\n      const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n      expect(errors).toEqual([\n        {\n          context: {\n            allowedValues: ['primary', 'secondary'],\n            errorType: 'enum',\n          },\n          message: \"'type' property must be equal to one of the allowed values\",\n          path: '{base}.type',\n        },\n      ]);\n    });\n  });\n\n  it('should handle array paths', () => {\n    data = {\n      custom: [{ foo: 'bar' }, { aaa: 'zzz' }],\n    };\n    schema = {\n      type: 'object',\n      properties: {\n        custom: {\n          type: 'array',\n          items: {\n            type: 'object',\n            additionalProperties: false,\n            properties: {\n              id: {\n                type: 'string',\n              },\n              title: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    };\n    ajv.validate(schema, data);\n    const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n    expect(errors).toEqual([\n      {\n        context: {\n          errorType: 'additionalProperties',\n        },\n        message: \"'foo' property is not expected to be here\",\n        path: '{base}.custom.0',\n      },\n      {\n        context: {\n          errorType: 'additionalProperties',\n        },\n        message: \"'aaa' property is not expected to be here\",\n        path: '{base}.custom.1',\n      },\n    ]);\n  });\n\n  it('should handle file $refs', () => {\n    data = {\n      child: [{ foo: 'bar' }, { aaa: 'zzz' }],\n    };\n    schema = {\n      $id: 'http://example.com/schemas/Main.json',\n      type: 'object',\n      properties: {\n        child: {\n          type: 'array',\n          items: {\n            $ref: './Child.json',\n          },\n        },\n      },\n    };\n    ajv.addSchema({\n      $id: 'http://example.com/schemas/Child.json',\n      additionalProperties: false,\n      type: 'object',\n      properties: {\n        id: {\n          type: 'string',\n        },\n      },\n    });\n    ajv.validate(schema, data);\n    const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n    expect(errors).toEqual([\n      {\n        context: {\n          errorType: 'additionalProperties',\n        },\n        message: \"'foo' property is not expected to be here\",\n        path: '{base}.child.0',\n      },\n      {\n        context: {\n          errorType: 'additionalProperties',\n        },\n        message: \"'aaa' property is not expected to be here\",\n        path: '{base}.child.1',\n      },\n    ]);\n  });\n\n  it('should handle number enums', () => {\n    data = {\n      isLive: 2,\n    };\n    schema = {\n      type: 'object',\n      properties: {\n        isLive: {\n          type: 'integer',\n          enum: [0, 1],\n        },\n      },\n    };\n    ajv.validate(schema, data);\n    const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n    expect(errors).toEqual([\n      {\n        context: {\n          allowedValues: [0, 1],\n          errorType: 'enum',\n        },\n        message: \"'isLive' property must be equal to one of the allowed values\",\n        path: '{base}.isLive',\n      },\n    ]);\n  });\n\n  describe('const', () => {\n    it('should handle const errors', () => {\n      data = {\n        const: 2,\n      };\n      schema = {\n        type: 'object',\n        properties: {\n          const: {\n            type: 'integer',\n            const: 42,\n          },\n        },\n      };\n      ajv.validate(schema, data);\n      const errors = betterAjvErrors({ data, schema, errors: ajv.errors });\n      expect(errors).toEqual([\n        {\n          context: {\n            allowedValue: 42,\n            errorType: 'const',\n          },\n          message: \"'const' property must be equal to the allowed value\",\n          path: '{base}.const',\n        },\n      ]);\n    });\n  });\n});\n"],"mappings":"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"}