{"version":3,"file":"filter.js","names":["filterSingleErrorPerProperty","errors","errorsPerProperty","reduce","acc","error","prop","instancePath","params","additionalProperty","missingProperty","existingError","weight","AJV_ERROR_KEYWORD_WEIGHT_MAP","keyword","existingWeight","Object","values"],"sources":["../../../../../../../node_modules/@apideck/better-ajv-errors/src/lib/filter.ts"],"sourcesContent":["import { DefinedError } from 'ajv';\nimport { AJV_ERROR_KEYWORD_WEIGHT_MAP } from '../constants';\n\nexport const filterSingleErrorPerProperty = (errors: DefinedError[]): DefinedError[] => {\n  const errorsPerProperty = errors.reduce<Record<string, DefinedError>>((acc, error) => {\n    const prop =\n      error.instancePath + ((error.params as any)?.additionalProperty ?? (error.params as any)?.missingProperty ?? '');\n    const existingError = acc[prop];\n    if (!existingError) {\n      acc[prop] = error;\n      return acc;\n    }\n    const weight = AJV_ERROR_KEYWORD_WEIGHT_MAP[error.keyword] ?? 0;\n    const existingWeight = AJV_ERROR_KEYWORD_WEIGHT_MAP[existingError.keyword] ?? 0;\n\n    if (weight > existingWeight) {\n      acc[prop] = error;\n    }\n    return acc;\n  }, {});\n\n  return Object.values(errorsPerProperty);\n};\n"],"mappings":";;;;;;AACA;AAEO,MAAMA,4BAA4B,GAAIC,MAAsB,IAAqB;EACtF,MAAMC,iBAAiB,GAAGD,MAAM,CAACE,MAAM,CAA+B,CAACC,GAAG,EAAEC,KAAK,KAAK;IACpF,MAAMC,IAAI,GACRD,KAAK,CAACE,YAAY,IAAKF,KAAK,CAACG,MAAM,EAAUC,kBAAkB,IAAKJ,KAAK,CAACG,MAAM,EAAUE,eAAe,IAAI,EAAE,CAAC;IAClH,MAAMC,aAAa,GAAGP,GAAG,CAACE,IAAI,CAAC;IAC/B,IAAI,CAACK,aAAa,EAAE;MAClBP,GAAG,CAACE,IAAI,CAAC,GAAGD,KAAK;MACjB,OAAOD,GAAG;IACZ;IACA,MAAMQ,MAAM,GAAGC,uCAA4B,CAACR,KAAK,CAACS,OAAO,CAAC,IAAI,CAAC;IAC/D,MAAMC,cAAc,GAAGF,uCAA4B,CAACF,aAAa,CAACG,OAAO,CAAC,IAAI,CAAC;IAE/E,IAAIF,MAAM,GAAGG,cAAc,EAAE;MAC3BX,GAAG,CAACE,IAAI,CAAC,GAAGD,KAAK;IACnB;IACA,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,OAAOY,MAAM,CAACC,MAAM,CAACf,iBAAiB,CAAC;AACzC,CAAC;AAAC"}